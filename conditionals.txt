CONDITIONALS

1.
IF/ELSE STATEMENTS
IF: allows you to execute code based on certain conditions
ELSE: will only execute when the IF statement evaluates false
    // if example
    if (condition) {
        // code here gets executed if condition evaluates to true
    } else {
        // code here gets executed if condition evaluates to false
    }

a. condition is some expression that evaluates to a boolean value

2.
IF/ELSE IF/ELSE
    // if/else if/else example
    if (condition1) {
        // code here gets executed if condition1 evaluates to true
    } else if (condition2) {
        // code here gets executed only if condition1 is false *and* condition2 evaluates to true
    } else {
        // code here gets executed if neither condition1 nor condition2 evaluate to true
    }

a. finale ELSE is not required

EXAMPLE #2
    var weShouldDeleteStuff = confirm('Are you sure you want to delete everything?');

    if (weShouldDeleteStuff) {
        // delete all the things...
    } else {
        alert("Operation Canceled!");
    }

a. confirm will give us a boolean value
b. we can use the boolean value inside our IF statement

EXAMPLE #3
     var pizzaPreference = prompt("What kind of pizza do you like?");

     if (pizzaPreference === "pineapple and hot sauce") {
         alert("What a coincidence, that's my favorite!");
     } else if (pizzaPreference === "cheese") {
         alert("Just plain cheese? Okay...");
     } else {
         alert(pizzaPreference + " isn't my favorite, but let's order some!");
     }

a. using the === comparison operator to compare string values from
    the user to various string literal values

3.
TERNARY OPERATOR (SHORTHAND IF/ELSE)
      'use strict';

      var message;

      if (success) {
          message = "Operation was successful.";
      } else {
          message = "Oops, something went wrong.";
      }

      // the above if/else can be re-written as:
      var message = (success) ? "Operation was successful." : "Oops, something went wrong.";

a. this is only available when a single assignment is being made based
    on provided condition
b. provides us an expression that is conditionally evaluated
c. must be used sparingly; if used improperly it will make things
    difficult

4.
SWITCH STATEMENTS
    var pizzaPreference = prompt("What kind of pizza do you like?");

        switch(pizzaPreference) {
              case "pineapple and hot sauce":
                  alert("What a coincidence, that's my favorite!");
                  break;
              case "cheese":
                  alert("Just plain cheese? Okay...");
                  break;
              default:
                  alert(pizzaPreference + " isn't my favorite, but let's order some!");
                  break;
          }

a. SWITCH statement provides alternative to a series of IF/ELSE statements
b. increases code readability; less duplication
c. CASE statements are used to match the expression
d. CASE statements are closed off by a BREAK statement
e. DEFAULT case is the final ELSE in this case