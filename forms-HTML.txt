HTML FORMS

1.
STRUCTURE
a. defined by the <FORM> element
    <form method="POST" action="https://request-inspector.glitch.me/">

        <label for="username">Username</label>
        <input id="username" name="username" type="text">
        <br>

        <label for="password">Password</label>
        <input id="password" name="password" type="password">
        <br>

        <input type="submit">
    </form>

2.
METHOD
a. this is an attribute; refers to the HTTP method
b. no METHOD, GET method will be used

3.
HTTP GETs
a. requests information, w/o making changes to the data
b. any data the form sends will be appended in the form of a QUERY STRING

4.
HTTPS POSTs
a. makes a change to existing data
b. any data the forms sends will NOT be added to the URL
c. it will be embedded in the body of the HTTP; key-value pairs

5.
ACTION
a. attribute; location the data should be sent
b. no ACTION, the ACTION will be sent to the back of the URL

6.
QUERY STRINGS
a. composed of key-value pairs

    ?key1=value1&key2=value2&key3=value3

b. begins with (?) and seperated by (&) ampersands
c. GET METHOD: appended to the URL (shown above)
d. POST METHOD: sent as a query string (w/o ?) in the body of the HTTP request

    GET METHOD EXAMPLE:
            <form action="https://request-inspector.glitch.me" method="GET">
                <label for="zipcode">Zipcode</label>
                <input type="text" name="zipcode" id="zipcode" placeholder="input a zipcode">
                <button type="submit">Search</button>
            </form>
    TO TEST:
            <a href="https://request-inspector.glitch.me?zipcode=78205">Search in ZIP Code 78205</a>

7.
SUBMITTING
    <input type="submit">
    <button type="submit">Submit the form</button>

a. must contain either button or input element with type attribute value submit

8.
INPUTS
a. defines the actual data that goes along with the form submission

    COMMON FORM INPUT ELEMENTS
    1.TEXT INPUTS
        <input type="text" name="email" placeholder="Enter your email address">
        <input type="password" name="password">

    a. optionally include a placeholder attribute
    b. setting to password will hide what the user enters
    c. specific value attributes will pre-fill the input

    2.TEXT AREAS
        <textarea name="comment"></textarea>

    a. used for longer text input
    b. NOT a void element
    c. uses contents of the element

    3.CHECKBOXES AND RADIO BUTTONS
        <input name="newsletter_signup" value="true" type="checkbox" checked>Sign Up For The Email Newsletter
        A <input type="radio" name="quiz_question_1" value="a"><br>
        B <input type="radio" name="quiz_question_1" value="b"><br>
        C <input type="radio" name="quiz_question_1" value="c"><br>
        D <input type="radio" name="quiz_question_1" value="d"><br>

    a. INPUT elements with RADIO or CHECKBOX
    b. multiple elements should share a NAME attribute
    c. placed inside LABEL elements
    d. checkboxes pre-selected by CHECKED attribute
    e. radio buttons pre-selected by CHECKED attribute

    4.SELECTS
        <select name="coffee_preference">
            <option value="light">Light Roast</option>
            <option value="dark">Dark Roast</option>
            <option value="espresso">Espresso Blend</option>
        </select>

    a. create drop-down of choices
    b. OPTION element for each choice; what the user sees
    c. VALUE attribute is the data submitted as part of the form
    d. parent SELECT element has a NAME attribute
    e. child OPTION element have VALUE attributes

    5.HIDDEN INPUTS
        <input type="hidden" name="user_id" value="432">

    a. NOT shown to the user
    b. used to submit data along with the form the user does not specify/modify
    c. useful for backend

9.
COMMON ATTRIBUTES OF FORM ELEMENTS

    1.NAME AND VALUE
        <form>
            <input name="the_answer" value="42">
            <input type="submit">
        </form>

    a.




